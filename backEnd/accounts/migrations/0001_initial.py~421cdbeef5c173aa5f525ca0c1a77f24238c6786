# Generated by Django 3.2.4 on 2021-09-02 18:57

import accounts.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. 50 characters or fewer. Example: john.doe@gmail.com', max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='super user')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_normal', models.BooleanField(default=False)),
                ('is_lawyer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='LawyerUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.customuser')),
                ('description', models.TextField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_verified', models.BooleanField(default=False)),
                ('image', models.ImageField(upload_to=accounts.models.upload_lawyer_image, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('profile_img', models.ImageField(blank=True, default='default.png', null=True, upload_to=accounts.models.upload_lawyer_profile_img, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(max_length=11)),
                ('fax_number', models.CharField(blank=True, max_length=11, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('article_rank', models.IntegerField(blank=True, default=0, null=True)),
                ('favorites_rank', models.IntegerField(blank=True, default=0, null=True)),
                ('likes_rank', models.IntegerField(blank=True, default=0, null=True)),
                ('followers_rank', models.IntegerField(blank=True, default=0, null=True)),
                ('answers_rank', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'Lawyer',
                'verbose_name_plural': 'Lawyers',
            },
        ),
        migrations.CreateModel(
            name='NormalUser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.customuser')),
                ('username', models.CharField(blank=True, max_length=150, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('gender', models.CharField(blank=True, max_length=50, null=True, verbose_name='gender')),
                ('date_of_birth', models.CharField(blank=True, max_length=50, null=True, verbose_name='date of birth')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'Normal User',
                'verbose_name_plural': 'Normal Users',
            },
        ),
        migrations.CreateModel(
            name='LawyerUserImages',
            fields=[
                ('title', models.CharField(max_length=64)),
                ('image', models.ImageField(upload_to=accounts.models.upload_lawyer_images, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('sorting', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('lawyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lawyer_images', to='accounts.lawyeruser')),
            ],
            options={
                'verbose_name': 'Lawyer Image',
                'verbose_name_plural': 'Lawyer Images',
                'ordering': ('sorting',),
            },
        ),
    ]
